import os
from decimal import Decimal
import pickle
import numpy as np
unit_dict={
    "E_0": "V",
    'E_start': "V", #(starting dc voltage - V)
    'E_reverse': "V",
    'omega':"Hz",#8.88480830076,  #    (frequency Hz)
    'd_E': "V",   #(ac voltage amplitude - V) freq_range[j],#
    'v': '$s^{-1}$',   #       (scan rate s^-1)
    'area': '$cm^{2}$', #(electrode surface area cm^2)
    'Ru': "$\\Omega$",  #     (uncompensated resistance ohms)
    'Cdl': "F", #(capacitance parameters)
    'CdlE1': "",#0.000653657774506,
    'CdlE2': "",#0.000245772700637,
    'CdlE3': "",#1.10053945995e-06,
    'gamma': 'mol\:cm^{-2}$',
    'k_0': 's^{-1}$', #(reaction rate s-1)
    'alpha': "",
    "E0_mean":"V",
    "E0_std": "V",
    "k0_shape":"",
    "k0_loc":"",
    "k0_scale":"",
    "cap_phase":"rads",
    'phase' : "rads",
    "":"",
    "error": "$\mu$A"
}
fancy_names={
    "E_0": '$E^0$',
    'E_start': '$E_{start}$', #(starting dc voltage - V)
    'E_reverse': '$E_{reverse}$',
    'omega':'$\\omega$',#8.88480830076,  #    (frequency Hz)
    'd_E': "$\\Delta E$",   #(ac voltage amplitude - V) freq_range[j],#
    'v': "v",   #       (scan rate s^-1)
    'area': "Area", #(electrode surface area cm^2)
    'Ru': "Ru",  #     (uncompensated resistance ohms)
    'Cdl': "$C_{dl}$", #(capacitance parameters)
    'CdlE1': "$C_{dlE1}$",#0.000653657774506,
    'CdlE2': "$C_{dlE2}$",#0.000245772700637,
    'CdlE3': "$C_{dlE3}$",#1.10053945995e-06,
    'gamma': '$\\Gamma',
    'k_0': '$k_0', #(reaction rate s-1)
    'alpha': "$\\alpha$",
    "E0_mean":"$E^0 \\mu$",
    "E0_std": "$E^0 \\sigma$",
    "cap_phase":"Capacitance phase",
    'phase' : "Phase",
    "":"Experiment",
    "error":"Error",
}
optim_list=["","E0_mean", "E0_std","k_0","Ru","Cdl","CdlE1", "CdlE2","gamma","omega","cap_phase", "phase", "alpha", "error"]
name_list=[fancy_names[x] for x in optim_list]
values=[[0.22292688635059488, 0.050972912676677744, 299.99999739836767, 422.27438618574007, 7.651593539558172e-05, 0.005134821752196414, -0.0005041882668435239, 7.102509666985187e-11, 8.9405267663616, 4.347681361502323, 4.87578224515589, 0.45, 1.7291461603939715] ,
[0.22318477825106026, 0.05017555057827148, 299.99999708633436, 435.3085348834923, 7.656969863908582e-05, 0.0049162085192067315, -0.0004940984281294643, 7.132894746570913e-11, 8.940526442793887, 4.351490084915743, 4.882006350982772, 0.46, 1.7116095614595837] ,
[0.22344094809230408, 0.04938747100124928, 299.9999949194532, 448.1599763738806, 7.662451273619158e-05, 0.004694371394108644, -0.00048387029439424245, 7.163634587659001e-11, 8.940526040298975, 4.35524812234136, 4.88808304594808, 0.47000000000000003, 1.6942179866825902] ,
[0.22370166148102177, 0.048594513570175274, 299.999999937947, 461.06579388366265, 7.668183755836e-05, 0.004462686615568902, -0.0004731551691502609, 7.195182931026769e-11, 8.940525704936777, 4.359021627112069, 4.894125914517184, 0.48000000000000004, 1.676648303954053] ,
[0.2239633330566545, 0.04780440100021886, 299.9999998492653, 473.74415129596144, 7.673952794583403e-05, 0.004234586927178409, -0.0004626442323058585, 7.226301271403864e-11, 8.940525414770828, 4.362730640192005, 4.900033533417553, 0.49000000000000005, 1.6590477631091562] ,
[0.23176101084840808, 0.030347974151306224, 107.53613561318956, 590.443764676077, 7.6820398998218e-05, 0.004474624678728965, -0.0004807322727249999, 7.466976561611421e-11, 8.940522968158602, 4.39535538195927, 5.032604192414274, 0.5, 1.3332350143027765] ,
[0.23683954678023605, 0.01852587374569928, 67.77378565508417, 623.6071397782022, 7.664564618079962e-05, 0.005557763492550494, -0.0005408727560896349, 7.547754181529023e-11, 8.940522368917645, 4.403380107195071, 5.102945663573942, 0.51, 1.111922641627709] ,
[0.23900539779698587, 0.012495118289935866, 56.188310062404945, 628.5655234790614, 7.657793838284919e-05, 0.005997891678714437, -0.0005672650186174608, 7.57075288471139e-11, 8.940522380965886, 4.403975799047679, 5.1313173648097035, 0.52, 1.0037378735279048] ,
[0.239600294978906, 0.00983056843789631, 55.00052626750721, 637.8470449957293, 7.667085863256932e-05, 0.00570584400209484, -0.0005560412463683495, 7.606115631025129e-11, 8.940522193749983, 4.4065273436324635, 5.138139654702327, 0.53, 0.9519834204919019] ,
[0.23895989026998632, 0.010302865192620036, 60.4060892206524, 653.5788290922803, 7.688160708685767e-05, 0.004892910406443837, -0.0005177765609662311, 7.656559966657177e-11, 8.940521544246733, 4.411478052457433, 5.130891419012762, 0.54, 0.9414675888966164] ,
[0.23776820129989204, 0.012450970105707577, 69.44127555817347, 669.4862832682389, 7.712489751222832e-05, 0.003922657302229002, -0.0004707909558789216, 7.70666522967133e-11, 8.940520982362985, 4.416693392972258, 5.117982000330727, 0.55, 0.9575750915947961] ,
[0.236488634758585, 0.015094276283200609, 80.29560428116115, 681.3101581551538, 7.734794864089517e-05, 0.0030106294613832726, -0.0004260879423058535, 7.746352664803931e-11, 8.940520424155347, 4.420737609411589, 5.103781574737011, 0.56, 0.9890559678662293] ,
[0.23521976361435246, 0.017880576503649055, 92.03721678095195, 687.0154644062927, 7.752781945257328e-05, 0.00225141812995977, -0.0003885264866657096, 7.769334440335027e-11, 8.940520261117276, 4.422947452752389, 5.089383513683083, 0.5700000000000001, 1.0301413073001282] ,
[0.23390430905699255, 0.020859204824098317, 104.15659670702253, 684.6010926039512, 7.765425228548337e-05, 0.0016876381150878542, -0.0003603144768100069, 7.769052465288134e-11, 8.94052001979807, 4.422735193998429, 5.074197076654592, 0.5800000000000001, 1.0799935603705102] ,
[0.23251714497989126, 0.02405515496410489, 116.36349823082118, 673.2019464098291, 7.77236041904818e-05, 0.001336212483985244, -0.0003423455537784111, 7.742634190007686e-11, 8.940520035931884, 4.4198479726898094, 5.057549147749125, 0.5900000000000001, 1.1374330957660874] ,
[0.23110722113853555, 0.027345924242786514, 128.71431443672168, 654.1702606093729, 7.77430224842735e-05, 0.0011777514485454693, -0.0003337620915544407, 7.694184659356877e-11, 8.940520227359853, 4.4146842774777895, 5.039396163846407, 0.6000000000000001, 1.1990887961772798] ,
[0.22981753816027073, 0.030395695771804614, 141.1525168627014, 632.1578841519839, 7.7733121690724e-05, 0.0011417895920334403, -0.0003312690683826506, 7.63778970972664e-11, 8.940520706089067, 4.408580207526885, 5.0213181023360605, 0.6100000000000001, 1.2574027247865274] ,
[0.22872970047843125, 0.03300224688617789, 153.71339746741947, 611.2935358856964, 7.771232438784492e-05, 0.001159295367476533, -0.0003315359641428723, 7.585555660277255e-11, 8.940521022251833, 4.402746263497323, 5.0047763710668205, 0.62, 1.3077690019414436] ,
[0.22784533553909547, 0.035151825540718294, 166.33914691637972, 593.15999069284, 7.76910349334686e-05, 0.001190758001612946, -0.00033261861837084045, 7.541221293474738e-11, 8.940521227526002, 4.397659739103219, 4.990282449748326, 0.63, 1.3493666794001686] ,
[0.22713150168482887, 0.0369097925597585, 179.04266050571186, 578.2059754512088, 7.76726512958758e-05, 0.0012139216773943487, -0.00033341340886249536, 7.506545227857711e-11, 8.940521562725715, 4.393449449677158, 4.977884147254072, 0.64, 1.3835338853920798] ,
[0.22654888596954947, 0.03836537102264269, 191.6676214677731, 565.687667794221, 7.765938969424711e-05, 0.0012249766508956247, -0.0003337270822888153, 7.478484022832257e-11, 8.940521670583593, 4.3899262699773764, 4.967206725403203, 0.65, 1.4116842672651893] ,
[0.22605275889826643, 0.03961609149876588, 204.40813411271506, 554.8090434999608, 7.764703113348472e-05, 0.0012366542613840084, -0.00033410199857506623, 7.45480802997272e-11, 8.940521958437223, 4.3868586692262905, 4.957746032141181, 0.66, 1.435950548781605] ,
[0.22563030381370325, 0.0406981552376054, 217.27399827903216, 545.4140762943755, 7.763693444824383e-05, 0.0012407116055552989, -0.0003341574184560041, 7.435360114608232e-11, 8.94052208886792, 4.3842073586932555, 4.949348666887969, 0.67, 1.4568678559240236]
]


names=["Alpha="+str((round(i, 3))) for i in np.arange(0.45, 0.67, 0.01)]

#names=my_list[0]
f =open("image_tex_test.tex", "r")
table_file=open("image_tex_edited.tex", "w")
param_num=len(name_list)+1
table_title="\\multicolumn{"+str(param_num-1)+"}{|c|}{Parameter values}\\\\ \n"
table_control1="\\begin{tabular}{|"+(("c|"*param_num))+"}\n"
table_control2="\\begin{tabular}{|"+(("p{3cm}|"*param_num))+"}\n"
value_rows=[]
row_1=""
for i in range(0, len(name_list)):
    if unit_dict[optim_list[i]]!="":
        unit_dict[optim_list[i]]=" ("+unit_dict[optim_list[i]]+")"
    if i ==len(values[0]):
        row_1=row_1+name_list[i]+unit_dict[optim_list[i]] +"\\\\\n"
    else:
        row_1=row_1+(name_list[i]+unit_dict[optim_list[i]]+" & ")
value_rows.append(row_1)
for i in range(0, len(names)):
    row_n=""
    row_n=row_n+(names[i]+ " & ")
    for j in range(0, len(values[0])):
        if j ==len(values[0])-1:
            end_str="\\\\\n"
        else:
            end_str=" & "
        print(names[i])
        if abs(values[i][j])>1e-2:

            row_n=row_n+(str(round(values[i][j],3))+ end_str)
        else:
            row_n=row_n+("{:.3E}".format(Decimal(str(values[i][j])))+ end_str)
    value_rows.append(row_n)

control_num=0

for line in f:
    if line[0]=="\\":
        if line.strip()=="\hline":
            table_file.write(line)
        try:
            line.index("{")
            command=line[line.index("{")+1:line.index("}")]
            if (command=="tabular")and (control_num==0):
                line=table_control1
                control_num+=1
            elif (command=="tabular") and (control_num==2):
                line=table_control2
                control_num+=1
            elif command=="4":
                line=table_title
            table_file.write(line)
        except:
            continue
    elif line[0]=="e":
        for q in range(0, len(names)+1):
            line=value_rows[q]
            table_file.write(line)
            table_file.write("\hline\n")
f.close()
table_file.close()
filename=""
filename="Alice_diff_alphas_"
filename=filename+"table.png"
#os.system("pdflatex image_tex_edited.tex")
os.system("convert -density 300 -trim image_tex_edited.pdf -quality 100 " + filename)
os.system("mv " +filename+" ~/Documents/Oxford/FTacV_2/FTacV_results/Param_tables")
